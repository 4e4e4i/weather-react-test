{"version":3,"sources":["components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/spinner/index.js","components/spinner/spinner.js","components/cities-list-item/index.js","components/cities-list-item/citiest-list-item.js","actions/index.js","components/weather-service-context/weather-service-conext.js","components/hoc/with-weather-service.js","components/utils/compose.js","components/cities-list/cities-list.js","components/citi-form/city-form.js","components/pages/home-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/index.js","store.js","index.js","services/weather-service.js"],"names":["ErrorIndicator","react_default","a","createElement","className","Spinner","CitiesListItem","_ref","city","onDelete","id","name","main","sys","wind","country","onClick","type","temp","pressure","speed","cityDeleted","cityId","localStorage","removeItem","payload","cityAdd","weatherService","dispatch","addCity","then","res","catch","err","fetchCities","getCurrent","React","createContext","WeatherServiceProvider","Provider","WeatherServiceConsumer","Consumer","withWeatherService","Wrapped","props","Object","assign","compose","_len","arguments","length","funcs","Array","_key","comp","reduceRight","wrapped","f","CitiesList","cities","map","key","components_cities_list_item","CitiesListContainer","this","_this$props","loading","error","components_spinner","components_error_indicator","cities_list_CitiesList","Component","connect","_ref2","_ref3","bindActionCreators","CityForm","state","value","handleChange","event","_this","setState","target","handleClick","preventDefault","onAddedToList","cityError","placeholder","onChange","HomePage","citi_form_city_form","cities_list_cities_list","App","role","Switch","Route","path","exact","component","ErrorBoundry","hasError","children","initialState","reducer","undefined","action","objectSpread","findIndex","concat","toConsumableArray","itemIndex","slice","store","createStore","applyMiddleware","thunkMiddleware","next","getState","console","log","_apiBase","_apiKey","_apiMetric","_lsPrefix","navigator","geolocation","getCurrentPosition","getCityByGeo","_callee","position","lat","lon","regenerator_default","wrap","_context","prev","coords","latitude","longitude","fetch","sent","json","lskey","getItem","setItem","JSON","stringify","stop","i","indexOf","push","parse","Promise","resolve","setTimeout","getResource","_callee2","url","_context2","ok","Error","status","abrupt","_callee3","data","_context3","ReactDOM","render","es","error_boundry","BrowserRouter","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.97301a3c.chunk.js","sourcesContent":["import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\n\nimport './error-indicator.scss';\n\nconst ErrorIndicator = () => {\n    return (\n        <div className=\"error-indicator\">\n            <span>something has gone terribly wrong</span>\n        </div>\n    )\n};\n\nexport default ErrorIndicator;\n","import Spinner from './spinner';\n\nexport default Spinner;\n","import React from 'react';\n\nimport './spinner.scss'\n\nconst Spinner = () => {\n    return (\n        <div className=\"spinner\">\n            <span>Spinner!</span>\n        </div>\n    )\n};\n\nexport default Spinner;\n","import CitiesListItem from './citiest-list-item';\n\nexport default CitiesListItem;\n","import React from 'react';\n\nimport './cities-list-item.scss';\n\nconst CitiesListItem = ({ city, onDelete }) => {\n    const { id, name, main, sys, wind } = city;\n\n    return (\n        <div className=\"cities-list-item\">\n            <strong className=\"cities-list-item__name\">\n                <span>{name},</span>\n                <span>{sys.country}</span>\n            </strong>\n            <button\n                onClick={() => onDelete(id)}\n                type=\"button\"\n                className=\"cities-list-item__btn btn btn-primary\">\n                Delete\n            </button>\n            <ul className=\"cities-list-item__info\">\n                <li>\n                    <span>current temp: {main.temp} C</span>\n                </li>\n                <li>\n                    <span>current pressure: {main.pressure}</span>\n                </li>\n                <li>\n                    <span>current wind speed: {wind.speed}</span>\n                </li>\n            </ul>\n        </div>\n    )\n};\n\nexport default CitiesListItem;\n","const citiesRequested = () => {\n    return {\n        type: 'FETCH_CITIES_REQUESTED'\n    }\n};\n\nconst citiesLoaded = (newCities) => {\n    return {\n        type: 'FETCH_CITIES_SUCCESS',\n        payload: newCities\n    }\n};\n\nconst citiesError = (error) => {\n    return {\n        type: 'FETCH_CITIES_FAILURE',\n        payload: error\n    }\n};\n\nexport const cityAdded = (city) => {\n    return {\n        type: 'CITY_ADDED',\n        payload: city\n    }\n};\n\nexport const cityNotFound = (error) => {\n    return {\n        type: 'CITY_NOT_FOUND',\n        payload: error\n    }\n};\n\nexport const cityDeleted = (cityId) => {\n    const lsPrefix = 'cities-';\n    localStorage.removeItem(lsPrefix + cityId);\n\n    return {\n        type: 'CITY_DELETED',\n        payload: cityId\n    }\n};\n\nconst cityAdd = (weatherService) => (city) => (dispatch) => {\n    weatherService.addCity(city)\n        .then((res) => dispatch(cityAdded(res)))\n        .catch((err) => dispatch(cityNotFound(err)));\n};\n\nconst fetchCities = (weatherService) => () => (dispatch) => {\n    dispatch(citiesRequested());\n    weatherService.getCurrent();\n    weatherService.fetchCities()\n        .then((res) => dispatch(citiesLoaded(res)))\n        .catch((err) => dispatch(citiesError(err)));\n};\n\nexport {\n    fetchCities,\n    cityAdd\n};\n","import React from 'react';\n\nconst {\n    Provider: WeatherServiceProvider,\n    Consumer: WeatherServiceConsumer\n} = React.createContext();\n\nexport {\n    WeatherServiceProvider,\n    WeatherServiceConsumer\n}\n\n","import React from 'react';\nimport { WeatherServiceConsumer } from \"../weather-service-context\";\n\nconst withWeatherService = () => (Wrapped) => {\n\n    return (props) => {\n        return (\n            <WeatherServiceConsumer>\n                {\n                    (weatherService) => {\n                        return (<Wrapped {...props}\n                                         weatherService={weatherService}/>);\n                    }\n                }\n            </WeatherServiceConsumer>\n        );\n    }\n};\n\nexport default withWeatherService;\n","const compose = (...funcs) => (comp) => {\n    return funcs.reduceRight(\n        (wrapped, f) => f(wrapped), comp);\n};\n\nexport default compose;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\nimport Spinner from \"../spinner\";\nimport CitiesListItem from '../cities-list-item';\nimport {cityDeleted, fetchCities} from \"../../actions\";\nimport { bindActionCreators } from \"redux\";\nimport { withWeatherService } from \"../hoc\";\nimport { compose } from '../utils'\nimport { connect } from 'react-redux';\n\nimport './cities-list.scss';\n\nconst CitiesList = ({ cities, onDelete }) => {\n\n    if (cities) {\n        return (\n\n            <ul className=\"cities-list\">\n                {\n                    cities.map((city) => {\n\n                        return (\n                            <li key={city.id}>\n                                <CitiesListItem city={city} onDelete={onDelete}/>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        )\n    }\n};\n\nclass CitiesListContainer extends Component {\n\n    componentDidMount() {\n        this.props.fetchCities();\n    }\n\n    render() {\n        const { cities, loading, error, onDelete } = this.props;\n\n        if (loading) {\n            return <Spinner />\n        }\n\n        if (error) {\n            return <ErrorIndicator />\n        }\n\n        return <CitiesList cities={cities} onDelete={onDelete}/>\n\n    }\n}\n\nconst mapStateToProps = ({ cities, loading, error }) => {\n    return { cities, loading, error }\n};\n\nconst mapDispatchToProps = (dispatch, { weatherService }) => {\n    return bindActionCreators({\n        fetchCities: fetchCities(weatherService),\n        onDelete: cityDeleted,\n    }, dispatch);\n};\n\nexport default compose(\n    withWeatherService(),\n    connect(mapStateToProps, mapDispatchToProps)\n)(CitiesListContainer);\n","import React, { Component } from 'react';\n\nimport './city-form.scss';\nimport { compose } from '../utils';\nimport { withWeatherService } from '../hoc';\nimport { bindActionCreators } from \"redux\";\nimport { cityAdd } from \"../../actions\";\nimport { connect } from 'react-redux';\n\nclass CityForm extends Component {\n\n    state = {\n        value: '',\n        error: null,\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            value: event.target.value\n        });\n    };\n\n    handleClick = (event) => {\n        event.preventDefault();\n        this.props.onAddedToList(this.state.value);\n        this.setState({\n            value: ''\n        });\n    };\n\n    render() {\n        const {cityError} = this.props;\n\n        return (\n            <form className={ cityError ?\n                \"city-form city-form--error\" :\n                \"city-form\" }>\n                {\n                    cityError ? <span>Can't found city</span> : ''\n                }\n                <input\n                    className=\"city-form__input\"\n                    placeholder=\"Enter your city\"\n                    value={ this.state.value }\n                    onChange={ this.handleChange }\n                    type=\"text\"/>\n                <button\n                    className=\"city-form__btn btn btn-primary\"\n                    onClick={ this.handleClick }>\n                    Add city\n                </button>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = ({ cityError }) => {\n    return {cityError};\n};\n\nconst mapDispatchToProps = (dispatch, {weatherService}) => {\n    return bindActionCreators({\n            onAddedToList: cityAdd(weatherService)\n        }, dispatch);\n};\n\nexport default compose(\n    withWeatherService(),\n    connect(mapStateToProps, mapDispatchToProps)\n)(CityForm);\n","import React from 'react';\nimport CitiesListContainer from \"../cities-list/cities-list\";\nimport CityForm from \"../citi-form/city-form\";\n\nconst HomePage = () => {\n    return (\n        <section className=\"current-weather\">\n            <h1>React Weather</h1>\n            <CityForm />\n            <CitiesListContainer />\n        </section>\n    )\n};\n\nexport default HomePage;\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { HomePage } from '../pages'\n\nimport './app.scss';\n\nconst App = () => {\n    return (\n        <main role=\"main\" className=\"container\">\n            <Switch>\n                <Route\n                    path=\"/weather-react-test\"\n                    exact\n                    component={HomePage}/>\n            </Switch>\n        </main>\n\n    )\n};\n\nexport default App;\n","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundry extends Component {\n\n    state = {\n        hasError: false\n    };\n\n    componentDidCatch() {\n        this.setState({\n            hasError: true\n        })\n    };\n\n    render() {\n\n        if(this.state.hasError) {\n            return <ErrorIndicator />\n        }\n\n        return this.props.children;\n    }\n}\n","export const initialState = {\n    cities: [],\n    loading: true,\n    error: null,\n    cityError: null\n};\n\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case 'FETCH_CITIES_REQUESTED':\n            return {\n                ...state\n            };\n        case 'FETCH_CITIES_SUCCESS':\n            return {\n                ...state,\n                cities: action.payload,\n                loading: false\n            };\n        case 'FETCH_CITIES_FAILURE':\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            };\n        case 'CITY_ADDED':\n            const city = action.payload;\n            const cityId = city.id;\n            const cityIndex = state.cities.findIndex(({id}) => id === cityId);\n            if (cityIndex === -1) {\n                return {\n                    ...state,\n                    cities: [\n                        ...state.cities,\n                        city\n                    ],\n                    loading: false,\n                    cityError: false\n                }\n            }\n\n            return {\n                ...state\n            };\n        case 'CITY_DELETED':\n            const { cities } = state;\n            const itemIndex = cities.findIndex(({id}) => id === action.payload);\n            return {\n                ...state,\n                cities: [\n                    ...state.cities.slice(0, itemIndex),\n                    ...state.cities.slice(itemIndex + 1)\n                ]\n            };\n        case 'CITY_NOT_FOUND':\n            return {\n                ...state,\n                cityError: true\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport reducer from './reducers'\nimport thunkMiddleware from 'redux-thunk';\n\nconst logMiddleware = ({ getState }) => (next) => (action) => {\n    console.log(action.type, getState());\n    return next(action);\n};\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        });\n    }\n\n    return next(action);\n};\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware, stringMiddleware, logMiddleware));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport WeatherService from './services/weather-service';\nimport { WeatherServiceProvider } from \"./components/weather-service-context\";\n\nimport store from './store';\n\nconst weatherService = new WeatherService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <WeatherServiceProvider value={weatherService}>\n                <Router>\n                    <App />\n                </Router>\n            </WeatherServiceProvider>\n        </ErrorBoundry>\n    </Provider>,\n    document.getElementById('root')\n);\n","export default class WeatherService {\n\n    _apiBase = 'https://api.openweathermap.org/data/2.5/weather';\n    _apiKey = '&APPID=54795f00a49de9d54e952c6a88995e7c';\n    _apiMetric = '&units=metric';\n    _lsPrefix = 'cities-';\n\n    getCurrent = () => {\n        if (!navigator.geolocation) {\n            return;\n        }\n\n        navigator.geolocation.getCurrentPosition(this.getCityByGeo);\n    };\n\n    getCityByGeo = async (position) => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n\n        const res = await fetch(`${this._apiBase}?lat=${lat}&lon=${lon}${this._apiKey}${this._apiMetric}`);\n\n        res.json().then((res) => {\n            const lskey = `${this._lsPrefix}` + res.id;\n            if (!localStorage.getItem(lskey)) {\n                localStorage.setItem(lskey, JSON.stringify(res));\n            }\n        });\n    };\n\n    fetchCities = () => {\n        let cities = [];\n\n        if (localStorage.length) {\n            for (let i = 0; i < localStorage.length; i++) {\n                if (localStorage.key(i).indexOf(`${this._lsPrefix}`) !== -1) {\n                    cities.push(JSON.parse(localStorage.getItem(localStorage.key(i))))\n                }\n            }\n        }\n\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(cities);\n            }, 900);\n        })\n    };\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}?q=${url}${this._apiKey}${this._apiMetric}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n    };\n\n    addCity = async (city) => {\n        if (city === '') return;\n        const data = await this.getResource(city);\n\n        const lskey = `${this._lsPrefix}` + data.id;\n        if (!localStorage.getItem(lskey)) {\n            localStorage.setItem(lskey, JSON.stringify(data));\n        }\n        return data;\n    };\n}\n"],"sourceRoot":""}